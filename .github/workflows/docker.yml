name: Build Docker Image
on:
  push:

permissions:
  actions: write
  packages: write
  contents: read

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@master

      - name: Log into GitHub Package
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Release metadata
        id: meta
        uses: docker/metadata-action@master
        with:
          tags: |
            type=ref,event=branch
          images: ghcr.io/${{ github.repository_owner }}/animatedtimeline

      - name: Build and push Release Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=docker
          cache-to: type=gha,scope=docker,mode=max

  clean:
    runs-on: ubuntu-latest
    needs: [ docker ]
    steps:
      - name: Clean outdated image
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const response = await github.request("GET /user/packages/container/${{ env.PACKAGE_NAME }}/versions",
              { per_page: ${{ env.PER_PAGE }}
            });
            for(version of response.data) {
                if (version.metadata.container.tags.length == 0) {
                    console.log("delete " + version.id)
                    const deleteResponse = await github.request("DELETE /user/packages/container/${{ env.PACKAGE_NAME }}/versions/" + version.id, { });
                    console.log("status " + deleteResponse.status)
                }
            }
        env:
          OWNER: Zxilly
          PACKAGE_NAME: animatedtimeline
          PER_PAGE: 100